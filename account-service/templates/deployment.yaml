apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "account-service.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "account-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "account-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "account-service.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.dockerTag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.service.nodePorts.nodeJSDebug }}
          command:
            - "npm"
            - "run"
            - "debug"
          {{- end }}
          ports:
            - name: api
              containerPort: 3000
          envFrom:
            - configMapRef:
                name: {{ include "account-service.name" . }}-config
            - secretRef:
                name: {{ include "account-service.name" . }}-secret
          volumeMounts:
            {{- if .Values.attributeProviderFile }}
              - mountPath: /home/node/app/attribute
                name: attribute
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        {{- if .Values.attributeProviderFile }}
        - name: attribute
          configMap:
            name: {{ include "account-service.name" . }}-attribute-config
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
